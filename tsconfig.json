{
    "compilerOptions": {
        "noImplicitThis": true,
        "types": [
            "minigame-typings"
        ],
        "moduleResolution": "node",
        // 指定 ECMAScript 目标版本 "ES3"（默认）， "ES5"， "ES6" / "ES2015"， "ES2016"， "ES2017" 或 "ESNext"。
        "target": "ES6",
        // 构建的目标代码删除所有注释，但是不会删除以 /!* 开头的版权信息
        "removeComments": false,
        // 启用所有严格类型检查选项。启用 --strict 相当于启用 --noImplicitAny, --noImplicitThis, --alwaysStrict， --strictNullChecks, --strictFunctionTypes 和 --strictPropertyInitialization
        "strict": true,
        // 允许js
        "allowJs": true,
        // 不输出私有方法
        "stripInternal": true,
        // 跳过声明文件检查
        "skipLibCheck": true,
        // 禁止对同一个文件的不一致的引用
        "forceConsistentCasingInFileNames": true,
        // 允许export module
        "esModuleInterop": true,
        // 生成相应的 .d.ts文件
        "declaration": false,
        // 生成 map文件
        "declarationMap": false,
        // 生成的 .d.ts文件路径，这里统一生成到types文件夹下
//        "declarationDir": "types",
        // 报错时不生成输出文件
        "noEmitOnError": false,
        // baseUrl来告诉编译器到哪里去查找模块，所有非相对模块导入都会被当做相对于 baseUrl。
        "baseUrl": ".",
        "lib": [
            "dom",
            "es5",
            "es6",
            "scripthost",
            "es2015.promise"
        ]
    },
    // 编译器默认包含的编译文件，src是源代码文件夹，test是jest测试代码文件夹
    "include": [
        "index.ts",
        "src/**/*"
    ],
    // 编译器默认排除的编译文件
    "exclude": [
        "node_modules"
    ]
}

